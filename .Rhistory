extensions = 'Buttons',
options = list(bLengthChange = FALSE,
dom = 'Blfrtip',
buttons = c('csv', 'pdf'),
lengthMenu = list(c(5,10,50,-1))),
colnames = c("fecha", "escorrentía (mm)"),
width = 400, height = 200)
qtab = qobs[,c("Date","SA01")]
qtab[,2] = round(qtab[,2],3)
qtab %>%
DT::datatable(#caption = "San Antonio Chico",
extensions = 'Buttons',
filter = "none",
options = list(bLengthChange = FALSE,
dom = 'Blfrtip',
buttons = c('csv', 'pdf'),
lengthMenu = list(c(5,10,50,-1))),
colnames = c("fecha", "escorrentía (mm)"),
width = 400, height = 200)
qtab = qobs[,c("Date","SA01")]
qtab[,2] = round(qtab[,2],3)
qtab %>%
DT::datatable(#caption = "San Antonio Chico",
extensions = 'Buttons',
selection = "none",
options = list(bLengthChange = FALSE,
dom = 'Blfrtip',
buttons = c('csv', 'pdf'),
lengthMenu = list(c(5,10,50,-1))),
colnames = c("fecha", "escorrentía (mm)"),
width = 400, height = 200)
qtab[,2:5] = round(qtab[,2:5],3)
qtab[,2:5] = round(qobs[,2:5],3)
qtab %>%
DT::datatable(
extensions = 'Buttons',
options = list(bLengthChange = FALSE,
dom = 'Blfrtip',
buttons = c('csv', 'pdf'),
lengthMenu = list(c(5,10,50,-1))),
colnames = c("fecha", "Chico","Cabecera","Ruta3","ByPass" ),
width = 500, height = 200)
qtab[,2:5] = round(qobs[,2:5],3)
qtab %>%
DT::datatable(
extensions = 'Buttons',
options = list(bLengthChange = FALSE,
dom = 'Blfrtip',
buttons = c('csv', 'pdf'),
lengthMenu = list(c(5,10,50,-1))),
colnames = c("fecha", "Chico","Cabecera","Ruta3","ByPass" ),
width = 700, height = 200)
qtab[,2:5] = round(qobs[,2:5],3)
qtab %>%
DT::datatable(
extensions = 'Buttons',
options = list(bLengthChange = FALSE,
dom = 'Blfrtip',
buttons = c('csv', 'pdf'),
lengthMenu = list(c(5,10,50,-1))),
colnames = c("fecha", "Chico","Cabecera","Ruta3","ByPass" ),
width = 600, height = 200)
qtab[,2:5] = round(qobs[,2:5],3)
qtab %>%
DT::datatable(
extensions = 'Buttons',
options = list(bLengthChange = FALSE,
dom = 'Blfrtip',
buttons = c('csv', 'pdf'),
lengthMenu = list(c(5,10,50,-1))),
colnames = c("fecha", "Chico","Cabecera","Ruta3","ByPass" ),
width = 600, height = 300)
qtab[,2:5] = round(qobs[,2:5],3)
qtab %>%
DT::datatable(caption = E"scorentía (mm)",
qtab[,2:5] = round(qobs[,2:5],3)
qtab %>%
DT::datatable(caption = "Escorentía (mm)",
extensions = 'Buttons',
options = list(bLengthChange = FALSE,
dom = 'Blfrtip',
buttons = c('csv', 'pdf'),
lengthMenu = list(c(5,10,50,-1))),
colnames = c("fecha", "Chico","Cabecera","Ruta3","ByPass" ),
width = 600, height = 300)
qobs[,2:5]
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(rmarkdown)
library(knitr)
library(kableExtra)
library(dplyr)
lhs <- readRDS("./docs/data/analsens/SA_01/lhs_samples.RDS")
library(kableExtra)
library(dplyr)
lhs <- readRDS("./docs/data/analsens/SA_01/lhs_samples.RDS")
library(kableExtra)
library(dplyr)
lhs <- readRDS("./docs/data/SA_01/lhs_samples.RDS")
l_upr = round(apply(lhs,2,max),2)
l_lwr = round(apply(lhs,2,min),3)
par_name = colnames(lhs)
par_tab = data.frame(parametro=par_name,lim_inferior=l_lwr,
lim_superior=l_upr)
kable(par_tab, table.attr = "style='width:30%;'",
caption = "Rango de muestreo de los parámetros") %>%
kable_styling(c("striped", "bordered"))
library(plotly)
GOF <- readRDS("./docs/data/SA_01/GOF.RDS")
fig = plot_ly(data = GOF,y = ~kge1, type = "box", name="Chico")
fig = fig %>% add_trace(data=GOF, y = ~kge2, name="Cabecera")
fig = fig %>% add_trace(data = GOF,y = ~kge3, name = "Ruta 3")
fig = fig %>% add_trace(data = GOF,y = ~kge4, name = "ByPass")
fig = fig %>% layout(yaxis = list(title="KGE [-]", range = c(-1, 1)),
showlegend = FALSE,
autosize=FALSE,
width=500,
height=350)
fig
fig = plot_ly(data = GOF,y = ~nse1, type = "box", name="Chico")
fig = fig %>% add_trace(data=GOF, y = ~nse2, name="Cabecera")
fig = fig %>% add_trace(data = GOF,y = ~nse3, name = "Ruta 3")
fig = fig %>% add_trace(data = GOF,y = ~nse4, name = "Bypass")
fig = fig %>% layout(yaxis = list(title="NSE [-]", range = c(-1, 1)),
showlegend = FALSE,
autosize=FALSE,
width=500,
height=350)
fig
fig = plot_ly(data = GOF,y = ~pbias1, type = "box", name="Chico")
fig = fig %>% add_trace(data=GOF, y = ~pbias2, name="Cabecera")
fig = fig %>% add_trace(data = GOF,y = ~pbias3, name = "Ruta 3")
fig = fig %>% add_trace(data = GOF,y = ~pbias4, name = "ByPass")
fig = fig %>% layout(yaxis = list(title="PBIAS [%]"),
showlegend = FALSE,
autosize=FALSE,
width=500,
height=350)
fig
mypar = cbind(lhs,GOF)
#mypar = mypar[,-3:-1]
mypar$NSE_mean = apply(mypar[,c("nse1","nse2","nse3","nse4")],1,mean)
mypar$KGE_mean = apply(mypar[,c("kge1","kge2","kge3","kge4")],1,mean)
mypar$PBIAS_mean = apply(mypar[,c("pbias1","pbias2","pbias3","pbias4")],1,mean)
mypar = mypar[order(-mypar$KGE_mean),]
saKGEmean = vector(length = 0)
par(mfrow=c(4,3), mar=c(4,4,1,1))
for(i in 1:12){
ecdf0 = ecdf(mypar[,i])
ecdf1 = ecdf(mypar[1:100,i])
tt = max(abs(ecdf0(mypar[1:100,i])-ecdf1(mypar[1:100,i])))
saNSEmean = c(saKGEmean,tt)
plot(ecdf0, verticals=TRUE, do.points=FALSE, main=colnames(mypar)[i])
plot(ecdf1, verticals=TRUE, do.points=FALSE, add=TRUE, col='brown')
legend("bottomright",paste(round(tt,3)))
}
library(GGally)
ggpairs(mypar[1:100,1:12])
sens = function(paramet, obj){
paramet = paramet[order(-paramet[,paste0(obj)]),]
sa = vector(length = 0)
for(i in 1:12){
ecdf0 = ecdf(paramet[,i])
ecdf1 = ecdf(paramet[1:100,i])
tt = max(abs(ecdf0(paramet[1:100,i])-ecdf1(paramet[1:100,i])))
sa = c(sa,tt)
}
return(sa)
}
sa_nse = data.frame(parametro = colnames(mypar)[1:12],
nse1=sens(mypar,"nse1"),
nse2=sens(mypar,"nse2"),
nse3=sens(mypar,"nse3"),
nse4=sens(mypar,"nse4"),
nse_mean=sens(mypar,"NSE_mean"))
fig <- plot_ly(sa_nse, x = ~parametro, y = ~nse1, type = 'bar', name = 'nse1')
fig <- fig %>% add_trace(y = ~nse2, name = 'nse2')
fig <- fig %>% add_trace(y = ~nse3, name = 'nse3')
fig <- fig %>% add_trace(y = ~nse4, name = 'nse4')
fig <- fig %>% add_trace(y = ~nse_mean, name = 'NSE_mean')
fig <- fig %>% layout(yaxis = list(title = 'Sensibilidad'), barmode = 'group')
fig
sa_kge = data.frame(parametro = colnames(mypar)[1:12],
kge1=sens(mypar,"kge1"),
kge2=sens(mypar,"kge2"),
kge3=sens(mypar,"kge3"),
kge4=sens(mypar,"kge4"),
kge_mean=sens(mypar,"KGE_mean"))
fig <- plot_ly(sa_kge, x = ~parametro, y = ~kge1, type = 'bar', name = 'kge1')
fig <- fig %>% add_trace(y = ~kge2, name = 'kge2')
fig <- fig %>% add_trace(y = ~kge3, name = 'kge3')
fig <- fig %>% add_trace(y = ~kge4, name = 'kge4')
fig <- fig %>% add_trace(y = ~kge_mean, name = 'KGE_mean')
fig <- fig %>% layout(yaxis = list(title = 'Sensibilidad'), barmode = 'group')
fig
mypar = mypar[order(-mypar$KGE_mean),]
apply(mypar[1:100,c("AlphaNL", "Cflux", "FCmult", "K4", "Nriver")],2,mean)
library(kableExtra)
library(dplyr)
lhs <- readRDS("./docs/data/SA_01/lhs_samples.RDS")
l_upr = round(apply(lhs,2,max),2)
l_lwr = round(apply(lhs,2,min),3)
par_name = colnames(lhs)
par_tab = data.frame(parametro=par_name,lim_inferior=l_lwr,
lim_superior=l_upr)
kable(par_tab, table.attr = "style='width:30%;'",
caption = "Rango de muestreo de los parámetros") %>%
kable_styling(c("striped", "bordered"))
library(plotly)
GOF <- readRDS("./docs/data/SA_01/GOF.RDS")
fig = plot_ly(data = GOF,y = ~kge1, type = "box", name="Chico")
fig = fig %>% add_trace(data=GOF, y = ~kge2, name="Cabecera")
fig = fig %>% add_trace(data = GOF,y = ~kge3, name = "Ruta 3")
fig = fig %>% add_trace(data = GOF,y = ~kge4, name = "ByPass")
fig = fig %>% layout(yaxis = list(title="KGE [-]", range = c(-1, 1)),
showlegend = FALSE,
autosize=FALSE,
width=500,
height=350)
fig
fig = plot_ly(data = GOF,y = ~nse1, type = "box", name="Chico")
fig = fig %>% add_trace(data=GOF, y = ~nse2, name="Cabecera")
fig = fig %>% add_trace(data = GOF,y = ~nse3, name = "Ruta 3")
fig = fig %>% add_trace(data = GOF,y = ~nse4, name = "Bypass")
fig = fig %>% layout(yaxis = list(title="NSE [-]", range = c(-1, 1)),
showlegend = FALSE,
autosize=FALSE,
width=500,
height=350)
fig
fig = plot_ly(data = GOF,y = ~pbias1, type = "box", name="Chico")
fig = fig %>% add_trace(data=GOF, y = ~pbias2, name="Cabecera")
fig = fig %>% add_trace(data = GOF,y = ~pbias3, name = "Ruta 3")
fig = fig %>% add_trace(data = GOF,y = ~pbias4, name = "ByPass")
fig = fig %>% layout(yaxis = list(title="PBIAS [%]"),
showlegend = FALSE,
autosize=FALSE,
width=500,
height=350)
fig
mypar = cbind(lhs,GOF)
#mypar = mypar[,-3:-1]
mypar$NSE_mean = apply(mypar[,c("nse1","nse2","nse3","nse4")],1,mean)
mypar$KGE_mean = apply(mypar[,c("kge1","kge2","kge3","kge4")],1,mean)
mypar$PBIAS_mean = apply(mypar[,c("pbias1","pbias2","pbias3","pbias4")],1,mean)
mypar = mypar[order(-mypar$KGE_mean),]
saKGEmean = vector(length = 0)
par(mfrow=c(4,3), mar=c(4,4,1,1))
for(i in 1:12){
ecdf0 = ecdf(mypar[,i])
ecdf1 = ecdf(mypar[1:100,i])
tt = max(abs(ecdf0(mypar[1:100,i])-ecdf1(mypar[1:100,i])))
saNSEmean = c(saKGEmean,tt)
plot(ecdf0, verticals=TRUE, do.points=FALSE, main=colnames(mypar)[i])
plot(ecdf1, verticals=TRUE, do.points=FALSE, add=TRUE, col='brown')
legend("bottomright",paste(round(tt,3)))
}
sens = function(paramet, obj){
paramet = paramet[order(-paramet[,paste0(obj)]),]
sa = vector(length = 0)
for(i in 1:12){
ecdf0 = ecdf(paramet[,i])
ecdf1 = ecdf(paramet[1:100,i])
tt = max(abs(ecdf0(paramet[1:100,i])-ecdf1(paramet[1:100,i])))
sa = c(sa,tt)
}
return(sa)
}
sa_nse = data.frame(parametro = colnames(mypar)[1:12],
nse1=sens(mypar,"nse1"),
nse2=sens(mypar,"nse2"),
nse3=sens(mypar,"nse3"),
nse4=sens(mypar,"nse4"),
nse_mean=sens(mypar,"NSE_mean"))
fig <- plot_ly(sa_nse, x = ~parametro, y = ~nse1, type = 'bar', name = 'nse1')
fig <- fig %>% add_trace(y = ~nse2, name = 'nse2')
fig <- fig %>% add_trace(y = ~nse3, name = 'nse3')
fig <- fig %>% add_trace(y = ~nse4, name = 'nse4')
fig <- fig %>% add_trace(y = ~nse_mean, name = 'NSE_mean')
fig <- fig %>% layout(yaxis = list(title = 'Sensibilidad'), barmode = 'group')
fig
sa_kge = data.frame(parametro = colnames(mypar)[1:12],
kge1=sens(mypar,"kge1"),
kge2=sens(mypar,"kge2"),
kge3=sens(mypar,"kge3"),
kge4=sens(mypar,"kge4"),
kge_mean=sens(mypar,"KGE_mean"))
fig <- plot_ly(sa_kge, x = ~parametro, y = ~kge1, type = 'bar', name = 'kge1')
fig <- fig %>% add_trace(y = ~kge2, name = 'kge2')
fig <- fig %>% add_trace(y = ~kge3, name = 'kge3')
fig <- fig %>% add_trace(y = ~kge4, name = 'kge4')
fig <- fig %>% add_trace(y = ~kge_mean, name = 'KGE_mean')
fig <- fig %>% layout(yaxis = list(title = 'Sensibilidad'), barmode = 'group')
fig
mypar = mypar[order(-mypar$KGE_mean),]
apply(mypar[1:100,c("AlphaNL", "Cflux", "FCmult", "K4", "Nriver")],2,mean)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(rmarkdown)
library(knitr)
library(hydroGOF)
lhs <- readRDS("./docs/SA_04/parametros.RDS")
lhs <- readRDS("./docs/data/SA_04/parametros.RDS")
#lhs = matrix(as.numeric(unlist(lhs)),ncol=13)
obs <- readRDS("./docs/data/SA_04/obs.RDS")
sim <- readRDS("./docs/data/SA_04/sim.RDS")
kge = data.frame(Chico = apply(sim[,1,],2,function(x){KGE(x,obs$SA01)}),
Cabecera = apply(sim[,2,],2,function(x){KGE(x,obs$SA02)}),
Ruta3 = apply(sim[,3,],2,function(x){KGE(x,obs$SA03)}),
ByPass = apply(sim[,4,],2,function(x){KGE(x,obs$SA04)}))
nse = data.frame(Chico = apply(sim[,1,],2,function(x){NSE(x,obs$SA01)}),
Cabecera = apply(sim[,2,],2,function(x){NSE(x,obs$SA02)}),
Ruta3 = apply(sim[,3,],2,function(x){NSE(x,obs$SA03)}),
ByPass = apply(sim[,4,],2,function(x){NSE(x,obs$SA04)}))
bias = data.frame(Chico = apply(sim[,1,],2,function(x){pbias(x,obs$SA01)}),
Cabecera = apply(sim[,2,],2,function(x){pbias(x,obs$SA02)}),
Ruta3 = apply(sim[,3,],2,function(x){pbias(x,obs$SA03)}),
ByPass = apply(sim[,4,],2,function(x){pbias(x,obs$SA04)}))
library(plotly)
fig = plot_ly(data = kge,y = ~Chico, type = "box", name="Chico")
fig = fig %>% add_trace(data=kge, y = ~Cabecera, name="Cabecera")
fig = fig %>% add_trace(data = kge,y = ~Ruta3, name = "Ruta 3")
fig = fig %>% add_trace(data = kge,y = ~ByPass, name = "ByPass")
fig = fig %>% layout(yaxis = list(title="KGE [-]", range = c(-1, 1)),
showlegend = FALSE,
autosize=FALSE,
width=500,
height=350)
fig = fig %>% layout(yaxis = list(range = c(0, 1)))
fig
library(plotly)
fig = plot_ly(data = nse,y = ~Chico, type = "box", name="Chico")
fig = fig %>% add_trace(data=nse, y = ~Cabecera, name="Cabecera")
fig = fig %>% add_trace(data = nse,y = ~Ruta3, name = "Ruta 3")
fig = fig %>% add_trace(data = nse,y = ~ByPass, name = "ByPass")
fig = fig %>% layout(yaxis = list(title="NSE [-]", range = c(-1, 1)),
showlegend = FALSE,
autosize=FALSE,
width=500,
height=350)
fig = fig %>% layout(yaxis = list(range = c(0, 1)))
fig
library(plotly)
fig = plot_ly(data = bias,y = ~Chico, type = "box", name="Chico")
fig = fig %>% add_trace(data=bias, y = ~Cabecera, name="Cabecera")
fig = fig %>% add_trace(data = bias,y = ~Ruta3, name = "Ruta 3")
fig = fig %>% add_trace(data = bias,y = ~ByPass, name = "ByPass")
fig = fig %>% layout(yaxis = list(title="Sesgo porcentual [%]", range = c(-1, 1)),
showlegend = FALSE,
autosize=FALSE,
width=500,
height=350)
fig = fig %>% layout(yaxis = list(range = c(-60, 60)))
fig
sim99 = apply(sim, c(1,2),function(x){quantile(x,0.99)})
sim50 = apply(sim, c(1,2),function(x){quantile(x,0.5)})
sim01 = apply(sim, c(1,2),function(x){quantile(x,0.01)})
Rdate = obs$Date
est=1
fig <- plotly_empty()
fig = fig %>% add_polygons(x=c(Rdate,rev(Rdate)),
y=c(sim01[,est],rev(sim99[,est])), name="Simulado (percentile 1-99)",
line=list(width=2,color="gray"),
fillcolor='gray', inherit = FALSE, opacity = 0.5)
fig <- fig %>% add_lines(x = ~Rdate, y = ~sim50[,est], name="Simulado (percentile 50)",
type = 'scatter',
mode = 'line',
line = list(color = 'red', width = 1))
fig <- fig %>% add_lines(x = ~Rdate, y = ~obs[,est+1], name="Observado",
type = 'scatter',
mode = 'line',
line = list(color = 'black', width = 1))
fig <- fig %>% layout(legend = list(x = 0.1, y = 0.9),
yaxis = list(title="Flow (m3/s)",showticklabels = TRUE, ticks="outside",showline=TRUE, showgrid=TRUE),
xaxis = list(title="",showticklabels = TRUE, ticks="outside",showline=TRUE, showgrid=TRUE))
fig %>%
rangeslider(Rdate[180], Rdate[210])
est=1
fig <- plotly_empty()
fig = fig %>% add_polygons(x=c(Rdate,rev(Rdate)),
y=c(sim01[,est],rev(sim99[,est])), name="Simulado (percentil 1-99)",
line=list(width=2,color="gray"),
fillcolor='gray', inherit = FALSE, opacity = 0.5)
fig <- fig %>% add_lines(x = ~Rdate, y = ~sim50[,est], name="Simulado (percentil 50)",
type = 'scatter',
mode = 'line',
line = list(color = 'red', width = 1))
fig <- fig %>% add_lines(x = ~Rdate, y = ~obs[,est+1], name="Observado",
type = 'scatter',
mode = 'line',
line = list(color = 'black', width = 1))
fig <- fig %>% layout(legend = list(x = 0.1, y = 0.9),
yaxis = list(title="Flow (m3/s)",showticklabels = TRUE, ticks="outside",showline=TRUE, showgrid=TRUE),
xaxis = list(title="",showticklabels = TRUE, ticks="outside",showline=TRUE, showgrid=TRUE))
fig %>%
rangeslider(Rdate[180], Rdate[210])
est=2
fig <- plotly_empty()
fig = fig %>% add_polygons(x=c(Rdate,rev(Rdate)),
y=c(sim01[,est],rev(sim99[,est])), name="Simulado (percentil 1-99)",
line=list(width=2,color="gray"),
fillcolor='gray', inherit = FALSE, opacity = 0.5)
fig <- fig %>% add_lines(x = ~Rdate, y = ~sim50[,est], name="Simulado (percentil 50)",
type = 'scatter',
mode = 'line',
line = list(color = 'red', width = 1))
fig <- fig %>% add_lines(x = ~Rdate, y = ~obs[,est+1], name="Observado",
type = 'scatter',
mode = 'line',
line = list(color = 'black', width = 1))
fig <- fig %>% layout(legend = list(x = 0.1, y = 0.9),
yaxis = list(title="Flow (m3/s)",showticklabels = TRUE, ticks="outside",showline=TRUE, showgrid=TRUE),
xaxis = list(title="",showticklabels = TRUE, ticks="outside",showline=TRUE, showgrid=TRUE))
fig %>%
rangeslider(Rdate[180], Rdate[210])
est=3
fig <- plotly_empty()
fig = fig %>% add_polygons(x=c(Rdate,rev(Rdate)),
y=c(sim01[,est],rev(sim99[,est])), name="Simulado (percentil 1-99)",
line=list(width=2,color="gray"),
fillcolor='gray', inherit = FALSE, opacity = 0.5)
fig <- fig %>% add_lines(x = ~Rdate, y = ~sim50[,est], name="Simulado (percentil 50)",
type = 'scatter',
mode = 'line',
line = list(color = 'red', width = 1))
fig <- fig %>% add_lines(x = ~Rdate, y = ~obs[,est+1], name="Observado",
type = 'scatter',
mode = 'line',
line = list(color = 'black', width = 1))
fig <- fig %>% layout(legend = list(x = 0.1, y = 0.9),
yaxis = list(title="Flow (m3/s)",showticklabels = TRUE, ticks="outside",showline=TRUE, showgrid=TRUE),
xaxis = list(title="",showticklabels = TRUE, ticks="outside",showline=TRUE, showgrid=TRUE))
fig %>%
rangeslider(Rdate[180], Rdate[210])
est=4
fig <- plotly_empty()
fig = fig %>% add_polygons(x=c(Rdate,rev(Rdate)),
y=c(sim01[,est],rev(sim99[,est])), name="Simulado (percentil 1-99)",
line=list(width=2,color="gray"),
fillcolor='gray', inherit = FALSE, opacity = 0.5)
fig <- fig %>% add_lines(x = ~Rdate, y = ~sim50[,est], name="Simulado (percentil 50)",
type = 'scatter',
mode = 'line',
line = list(color = 'red', width = 1))
fig <- fig %>% add_lines(x = ~Rdate, y = ~obs[,est+1], name="Observado",
type = 'scatter',
mode = 'line',
line = list(color = 'black', width = 1))
fig <- fig %>% layout(legend = list(x = 0.1, y = 0.9),
yaxis = list(title="Flow (m3/s)",showticklabels = TRUE, ticks="outside",showline=TRUE, showgrid=TRUE),
xaxis = list(title="",showticklabels = TRUE, ticks="outside",showline=TRUE, showgrid=TRUE))
fig %>%
rangeslider(Rdate[180], Rdate[210])
library(GGally)
mypar = matrix(as.numeric(unlist(lhs)),ncol=13)
colnames(mypar) = names(lhs)
mypar = data.frame(mypar)
ggpairs(mypar[,1:8],
#mapping = aes(size = 0.2),
upper = list(continuous = wrap("cor", size = 2))) +
theme(text = element_text(size=8),
axis.text.x = element_text(angle=90, hjust=1))
library(sp)
library(maptools)
# sistema de referencia
dec = CRS("+init=epsg:4326")
# Lectura de capas
subs1 = readShapePoly("./docs/data/subcuencas.shp", force_ring = T,
proj4string = dec)
plot(subs1)
plot(subs1, col=c(1,1,1,1,1,1))
plot(subs1, col=c(1,1,1,1,2,2))
plot(subs1, col=c(4,5,6,2,2,2))
dim(subs1)
plot(subs1, col=c(4,5,6,3,2,2))
library(sp)
library(maptools)
# sistema de referencia
dec = CRS("+init=epsg:4326")
# Lectura de capas
subs1 = readShapePoly("./docs/data/subcuencas.shp", force_ring = T,
proj4string = dec)
plot(subs1, col=c("beige","beige","beige","beige","green","green"))
library(sp)
library(maptools)
# sistema de referencia
dec = CRS("+init=epsg:4326")
# Lectura de capas
subs1 = readShapePoly("./docs/data/subcuencas.shp", force_ring = T,
proj4string = dec)
plot(subs1, col=c("beige","beige","beige","beige","green","green"))
legend(c("PERC1", "PERC2"), fill=c("green","beige"))
plot(subs1, col=c("beige","beige","beige","beige","green","green"))
legend(c("PERC1", "PERC2"), fill=c("green","beige"))
legend("toprigth",c("PERC1", "PERC2"), fill=c("green","beige"))
legend("topright",c("PERC1", "PERC2"), fill=c("green","beige"))
library(sp)
library(maptools)
# sistema de referencia
dec = CRS("+init=epsg:4326")
# Lectura de capas
subs1 = readShapePoly("./docs/data/subcuencas.shp", force_ring = T,
proj4string = dec)
plot(subs1, col=c("beige","beige","beige","beige","green","green"))
legend("topright",c("PERC1", "PERC2"), fill=c("green","beige"))
library(sp)
library(maptools)
# sistema de referencia
dec = CRS("+init=epsg:4326")
# Lectura de capas
subs1 = readShapePoly("./docs/data/subcuencas.shp", force_ring = T,
proj4string = dec)
plot(subs1, col=c("beige","beige","beige","beige","green","green"))
legend("topright",c("PERC1", "PERC2"), fill=c("green","beige"))
